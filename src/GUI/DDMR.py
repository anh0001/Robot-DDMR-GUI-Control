# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ddmr.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import serial
s = serial.Serial('COM6', 9600, timeout=2)


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1024, 653)
        self.groupBox = QtWidgets.QGroupBox(MainWindow)
        self.groupBox.setGeometry(QtCore.QRect(70, 20, 891, 411))
        self.groupBox.setFlat(True)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")

        self.ForwardBtn = QtWidgets.QPushButton(self.groupBox)
        self.ForwardBtn.setGeometry(QtCore.QRect(220, 40, 75, 61))
        self.ForwardBtn.setMinimumSize(QtCore.QSize(75, 0))
        self.ForwardBtn.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/Nailatun Naja/OneDrive/Documents/DDMR_Control/Icons8-Windows-8-Arrows-Up-Circular.512 (1).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ForwardBtn.setIcon(icon)
        self.ForwardBtn.setIconSize(QtCore.QSize(32, 32))
        self.ForwardBtn.setObjectName("ForwardBtn")

        self.StopBtn = QtWidgets.QPushButton(self.groupBox)
        self.StopBtn.setGeometry(QtCore.QRect(220, 110, 75, 61))
        self.StopBtn.setMinimumSize(QtCore.QSize(75, 0))
        self.StopBtn.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:/Users/Nailatun Naja/OneDrive/Documents/DDMR_Control/Hopstarter-Soft-Scraps-Button-Blank-Red.256.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.StopBtn.setIcon(icon1)
        self.StopBtn.setIconSize(QtCore.QSize(32, 32))
        self.StopBtn.setObjectName("StopBtn")

        self.BackwardBtn = QtWidgets.QPushButton(self.groupBox)
        self.BackwardBtn.setGeometry(QtCore.QRect(220, 180, 75, 61))
        self.BackwardBtn.setMinimumSize(QtCore.QSize(75, 0))
        self.BackwardBtn.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("C:/Users/Nailatun Naja/OneDrive/Documents/DDMR_Control/Icons8-Windows-8-Arrows-Down-Circular.512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.BackwardBtn.setIcon(icon2)
        self.BackwardBtn.setIconSize(QtCore.QSize(32, 32))
        self.BackwardBtn.setObjectName("BackwardBtn")

        self.RightBtn = QtWidgets.QPushButton(self.groupBox)
        self.RightBtn.setGeometry(QtCore.QRect(300, 110, 75, 61))
        self.RightBtn.setMinimumSize(QtCore.QSize(75, 0))
        self.RightBtn.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("C:/Users/Nailatun Naja/Downloads/download__1_-removebg-preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.RightBtn.setIcon(icon3)
        self.RightBtn.setIconSize(QtCore.QSize(32, 32))
        self.RightBtn.setObjectName("RightBtn")

        self.LeftBtn = QtWidgets.QPushButton(self.groupBox)
        self.LeftBtn.setGeometry(QtCore.QRect(140, 110, 75, 61))
        self.LeftBtn.setMinimumSize(QtCore.QSize(75, 0))
        self.LeftBtn.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("C:/Users/Nailatun Naja/OneDrive/Documents/DDMR_Control/Icons8-Windows-8-Arrows-Left-Circular.512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.LeftBtn.setIcon(icon4)
        self.LeftBtn.setIconSize(QtCore.QSize(32, 32))
        self.LeftBtn.setObjectName("LeftBtn")

        self.OdometryLine = QtWidgets.QLineEdit(self.groupBox)
        self.OdometryLine.setGeometry(QtCore.QRect(510, 80, 131, 22))
        self.OdometryLine.setObjectName("OdometryLine")

        self.SendOdometry = QtWidgets.QPushButton(self.groupBox)
        self.SendOdometry.setGeometry(QtCore.QRect(670, 80, 93, 28))
        self.SendOdometry.setObjectName("SendOdometry")

        self.SendPWM = QtWidgets.QPushButton(self.groupBox)
        self.SendPWM.setGeometry(QtCore.QRect(670, 120, 93, 28))
        self.SendPWM.setObjectName("SendPWM")

        self.PWMLine = QtWidgets.QLineEdit(self.groupBox)
        self.PWMLine.setGeometry(QtCore.QRect(510, 120, 131, 22))
        self.PWMLine.setObjectName("PWMLine")

        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(510, 170, 93, 28))
        self.pushButton.setObjectName("pushButton")

        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(510, 60, 61, 16))
        self.label_2.setObjectName("label_2")

        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(510, 100, 61, 16))
        self.label_3.setObjectName("label_3")

        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_2.setGeometry(QtCore.QRect(510, 210, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")

        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_3.setGeometry(QtCore.QRect(510, 250, 93, 28))
        self.pushButton_3.setObjectName("pushButton_3")

        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(510, 150, 61, 16))
        self.label_4.setObjectName("label_4")

        self.SendOdometry.clicked.connect(self.show_line)
        self.SendPWM.clicked.connect(self.show_edittext)
        self.ForwardBtn.clicked.connect(self.gerak_maju)
        self.BackwardBtn.clicked.connect(self.gerak_mundur)
        self.LeftBtn.clicked.connect(self.belok_kiri)
        self.RightBtn.clicked.connect(self.belok_kanan)
        self.StopBtn.clicked.connect(self.berhenti)
        self.pushButton.clicked.connect(self.control_mode)
        self.pushButton_2.clicked.connect(self.control_setting)
        self.pushButton_3.clicked.connect(self.otomatis_mode)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def show_line(self):
        print(self.OdometryLine.text())
        odometryValue = self.OdometryLine.text()
        print(odometryValue)

        if odometryValue:
            print(odometryValue)
            s.write(odometryValue.encode())
            print(f'Odometry Value "{odometryValue} sent to Arduino')

        else:
            print('Odometry value is empty. Please enter a value.')

    def show_edittext(self):
        print(self.PWMLine.text())
        PWMValue = self.PWMLine.text()
        print(PWMValue)

        if PWMValue:
            print(PWMValue)
            s.write(PWMValue.encode())
            print(f'PWM value "{PWMValue}" sent to Arduino')

        else:
            print('PWM value is empty. Please enter a value.')

    def gerak_maju(self):
        try:
            s.write(b'w')  # M     engirim perintah 'w' ke Arduino
            print("maju")
        except Exception as e:
            print(f'Something went wrong: {e}')
    
    def gerak_mundur(self):
        try:
            s.write(b's')  # Mengirim perintah 'w' ke Arduino
            print("mundur")
        except Exception as e:
            print(f'Something went wrong: {e}')

    def belok_kanan(self):
        try:
            s.write(b'd')  # Mengirim perintah 'w' ke Arduino
            print("kanan")
        except Exception as e:
            print(f'Something went wrong: {e}')

    def belok_kiri(self):
        try:
            s.write(b'a')  # Mengirim perintah 'w' ke Arduino
            print("kiri")
        except Exception as e:
            print(f'Something went wrong: {e}')

    def berhenti(self):
        try:
            s.write(b'q')  # Mengirim perintah 'w' ke Arduino
            print("stop")
        except Exception as e:
            print(f'Something went wrong: {e}')

    def control_mode(self):
        try:
            s.write(b'k')  # Mengirim perintah 'c' ke Arduino untuk memulai Control Mode
            print("Control Mode activated")
        except Exception as e:
            print(f'Something went wrong: {e}')

    def control_setting(self):
        try:
            s.write(b'j')  # Mengirim perintah 'c' ke Arduino untuk memulai Control Mode
            print("Control Setting activated")
        except Exception as e:
            print(f'Something went wrong: {e}')

    def otomatis_mode(self):
        try:
            s.write(b'l')  # Mengirim perintah 'c' ke Arduino untuk memulai Control Mode
            print("Control otomatis activated")
        except Exception as e:
            print(f'Something went wrong: {e}')

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Dialog"))
        self.groupBox.setTitle(_translate("MainWindow", "Motion Control"))
        self.ForwardBtn.setShortcut(_translate("MainWindow", "W"))
        self.StopBtn.setShortcut(_translate("MainWindow", "Q"))
        self.BackwardBtn.setShortcut(_translate("MainWindow", "S"))
        self.RightBtn.setShortcut(_translate("MainWindow", "D"))
        self.LeftBtn.setShortcut(_translate("MainWindow", "A"))
        self.SendOdometry.setText(_translate("MainWindow", "Send"))
        self.SendPWM.setText(_translate("MainWindow", "Send"))
        self.pushButton.setText(_translate("MainWindow", "Control Mode"))
        self.label_2.setText(_translate("MainWindow", "Odometry"))
        self.label_3.setText(_translate("MainWindow", "PWM"))
        self.pushButton_2.setText(_translate("MainWindow", "Setting Mode"))
        self.pushButton_3.setText(_translate("MainWindow", "Otomatis Mode"))
        self.label_4.setText(_translate("MainWindow", "Mode"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QDialog()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
